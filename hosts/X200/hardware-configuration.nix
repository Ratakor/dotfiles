# This was originally generated by ‘nixos-generate-config’
{
  config,
  lib,
  pkgs,
  modulesPath,
  ...
}: {
  imports = [
    (modulesPath + "/installer/scan/not-detected.nix")
  ];

  boot = {
    # we're not using pkgs.linuxPackages_latest-libre because of zfs
    # kernelPackages = pkgs.linuxPackages-libre;
    initrd = {
      availableKernelModules = ["uhci_hcd" "ehci_pci" "ahci" "usb_storage" "sd_mod"];
      kernelModules = [];
    };
    kernelModules = ["kvm-intel"];
    extraModulePackages = [];
  };

  # zpool options:
  #   ashift=12 (depends on the drive & cannot be changed)
  #
  #   compression=on (maybe swap to zstd for /nix)
  #   dedup=on (maybe only on for /nix)
  #   atime=off (or relatime=on atime=on for mixed perf)
  #   xattr=sa
  #   acltype=posixacl
  #   com.sun:auto-snapshot=true (only on /, /home and /var)
  #   recordsize=... currently keeping default, but maybe 1M for HDDs where storing large files

  # TODO: move this to notes or disko or idk but please this line is too long,
  # also where is the quick install guide for the rest of the partitions
  # Create a reserved partition with 10% of the total disk capacity
  # zfs create -o refreservation=$(printf '%s * 0.1' "$(zpool get size -pj | jq -r .pools.zpool.properties.size.value)" | bc | numfmt --to=iec) -o mountpoint=none zpool/reserved

  fileSystems = {
    "/" = {
      device = "zpool/root";
      fsType = "zfs";
    };

    "/nix" = {
      device = "zpool/nix";
      fsType = "zfs";
    };

    "/var" = {
      device = "zpool/var";
      fsType = "zfs";
    };

    "/home" = {
      device = "zpool/home";
      fsType = "zfs";
    };

    "/boot" = {
      device = "/dev/disk/by-uuid/8224-B0EA";
      fsType = "vfat";
      options = [
        "noatime"
        "nodev"
        "nosuid"
        "noexec"
        "fmask=0022"
        "dmask=0022"
      ];
    };
  };

  swapDevices = [
    {device = "/dev/disk/by-uuid/97789291-6b48-4b1d-b2f3-b7937c0e6adb";}
  ];

  # TODO: tmpfs /tmp tmpfs rw,nosuid,nodev,relatime,size=8G,mode=1777 0 0

  # Enables DHCP on each ethernet and wireless interface. In case of scripted networking
  # (the default) this is the recommended approach. When using systemd-networkd it's
  # still possible to use this option, but it's recommended to use it in conjunction
  # with explicit per-interface declarations with `networking.interfaces.<interface>.useDHCP`.
  networking.useDHCP = lib.mkDefault true;
  # networking.interfaces.eno0.useDHCP = lib.mkDefault true;
  # networking.interfaces.wlp2s0.useDHCP = lib.mkDefault true;

  nixpkgs.hostPlatform = lib.mkDefault "x86_64-linux";
  hardware.cpu.intel.updateMicrocode = lib.mkDefault config.hardware.enableRedistributableFirmware;
}
