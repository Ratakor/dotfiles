#!/bin/sh
# helper for the hole with encryption
# for pure bash use (exec 3<>/dev/tcp/$HOST/$PORT; cat >&3; cat <&3; exec 3<&-)
# instead of nc "$HOST" "$PORT"
# gpg -e -r keyid and gpg -d can be used instead of openssl
# TODO: use socat instead of openbsd-netcat

DIR="${XDG_DATA_HOME:-$HOME/.local/share}/hole"
HOST="hole.ratakor.com"
PORT="9999"

encode() {
	if [ -p "/dev/stdin" ]; then
		openssl enc -aes-256-cbc -pass "file:$DIR/pass" -pbkdf2 -iter 100000 -salt -a < "/dev/stdin" |\
			nc "$HOST" "$PORT" | tee -a "$DIR/history"
	elif [ -f "$1" ]; then
		openssl enc -aes-256-cbc -pass "file:$DIR/pass" -pbkdf2 -iter 100000 -salt -a < "$1" |\
			nc "$HOST" "$PORT" | tee -a "$DIR/history"
	else
		printf '%s\n' "$1" |\
			openssl enc -aes-256-cbc -pass "file:$DIR/pass" -pbkdf2 -iter 100000 -salt -a\
			| nc "$HOST" "$PORT" | tee -a "$DIR/history"
	fi
}

decode() {
	# only handle string because it makes no sense to handle something else
	printf '%s\n' "$1" | nc "$HOST" "$PORT" |\
		openssl enc -aes-256-cbc -pass "file:$DIR/pass" -pbkdf2 -iter 100000 -salt -a -d
}

usage() {
	printf 'Usage: %s [text|file]\n\nOptions:\n-e : encrypt\n-d : decrypt\n'\
		"${0##*/}" 1>&2
}

main() {
	# shellcheck disable=SC2174
	[ ! -d "$DIR" ] && mkdir -pm 700 "$DIR"
	[ ! -f "$DIR/history" ] &&
		:> "$DIR/history" &&
		chmod 600 "$DIR/history"
	[ ! -f "$DIR/pass" ] &&
		dd bs=4096 count=1 if=/dev/urandom 2> /dev/null | base64 --wrap=0 > "$DIR/pass" &&
		chmod 400 "$DIR/pass"

	case "$1" in
	-e)
		encode "$2"
		return ;;
	-d)
		decode "$2"
		return ;;
	'')
		# handle pipes
		if [ -p "/dev/stdin" ]; then
			nc "$HOST" "$PORT" < "/dev/stdin" | tee -a "$DIR/history"
			return
		fi
		usage
		return 1 ;;
	-*)
		printf 'Error: %s is not a valid option\n' "$1" 1>&2
		usage
		return 1 ;;
	esac

	# handle file
	[ -f "$1" ] &&
		nc "$HOST" "$PORT" < "$1" | tee -a "$DIR/history" &&
		return 0

	# handle string and do not put output in history
	OUTPUT="$(printf '%s\n' "$1" | nc "$HOST" "$PORT")"

	if printf '%s' "$OUTPUT" | grep -q "$HOST"; then
		printf '%s\n' "$OUTPUT" | tee -a "$DIR/history"
	else
		printf '%s\n' "$OUTPUT"
	fi
}

main "$@"
