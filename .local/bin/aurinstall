#!/bin/sh
# install packages from the AUR
# --update to reinstall all packages installed from the AUR
# --noconfirm to remove the confirmation before reinstalling a package

ROOTCMD="${ROOTCMD:-$(command -v doas || command -v sudo)}"
CACHE="${XDG_CACHE_HOME:-$HOME/.cache}/aur"
CONFIRM=1

install() {
	git clone "https://aur.archlinux.org/$1.git" "$CACHE/$1"
	cd "$CACHE/$1" && makepkg -si
}

cleanup() {
	for package in "$@"; do
		rm -rf "$CACHE/$package"
	done
}

main() {
	[ -z "$*" ] &&
		printf "You must run this command with an argument\n" 1>&2 &&
		return 1

	mkdir -p "$CACHE"
	trap 'rm -rf "$CACHE/*"; exit 1' INT HUP QUIT TERM
	trap 'cleanup "$@"' EXIT

	if [ "$1" = "--update" ]; then
		printf "Do you want to update all your package installed from the AUR ?\n"
		read -r CHOICE
		case $CHOICE in
		"y"|"Y"|"yes"|"YES"|"Yes")
			packages=$(pacman -Qqm)
			CONFIRM=0 ;;
		*)
			return 1;
		esac
	elif [ "$1" = "--noconfirm" ]; then
		CONFIRM=0
		shift
		packages=$*
	else
		packages=$*
	fi

	for package in $packages; do
		if pacman -Qq | grep -q -x "$package" && [ "$CONFIRM" -eq 1 ]; then
			printf '%s is already installed\nDo you want to update it ? (Y/n) ' "$package"
			read -r CHOICE
			case $CHOICE in
			"y"|"Y"|"yes"|"YES"|"Yes")
				install "$package" ;;
			*)
				continue ;;
			esac
		else
			install "$package"
		fi
	done
	if pacman -Qqdt 1>/dev/null; then
		printf "Type your password to remove orphaned packages\n"
		# shellcheck disable=SC2046
		"$ROOTCMD" pacman -Rns $(pacman -Qqdt)
	fi
}

main "$@"
