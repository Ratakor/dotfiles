#!/bin/sh
# shellcheck disable=SC2016

### WM config

riverctl focus-follows-cursor normal
riverctl attach-mode bottom
riverctl hide-cursor when-typing enabled
riverctl set-repeat 50 300
riverctl keyboard-layout "fr(us)"
riverctl default-layout rivertile

riverctl background-color 0x282a36
riverctl border-color-focused 0xbd93f9
riverctl border-color-unfocused 0x44475a
riverctl border-color-urgent 0xff5555

if [ -d "/sys/class/drm" ]; then
	for dev in /sys/class/drm/*/modes; do
		read -r resolution _ < "$dev" || continue
		break
	done

	width=$((${resolution%%x*} / 2))
	height=$((${resolution#*x} / 2))

	# width=$(echo "${resolution%%x*} * 0.8" | bc)
	# height=$(echo "${resolution#*x} * 0.8" | bc)
	# width=${width%.*}
	# height=${height%.*}

	riverctl rule-add -app-id "imv" float
	riverctl rule-add -app-id "imv" dimensions "$width"x"$height"
fi


### WM bindings

riverctl map normal Super F toggle-fullscreen
riverctl map normal Super+Shift Q close
riverctl map normal Super Space toggle-float

for i in $(seq 1 9); do
	tags=$((1 << (i - 1)))
	riverctl map normal Super "$i" set-focused-tags $tags
	riverctl map normal Super+Shift "$i" set-view-tags $tags
	riverctl map normal Super+Control "$i" toggle-focused-tags $tags
	riverctl map normal Super+Shift+Control "$i" toggle-view-tags $tags
done
tags1to9=$(((1 << 9) - 1))
riverctl map normal Super 0 set-focused-tags $tags1to9
riverctl map normal Super+Shift 0 set-view-tags $tags1to9

riverctl map normal Super Tab focus-previous-tags
riverctl map normal Super+Shift Tab send-to-previous-tags

riverctl map normal Super J focus-view next
riverctl map normal Super K focus-view previous
riverctl map normal Super+Shift Return zoom
riverctl map normal Super+Shift J swap next
riverctl map normal Super+Shift K swap previous

# next/previous or left/right
riverctl map normal Super Period focus-output next
riverctl map normal Super Comma focus-output previous
riverctl map normal Super+Shift Period send-to-output next
riverctl map normal Super+Shift Comma send-to-output previous

riverctl map normal Super H send-layout-cmd rivertile 'main-ratio -0.05'
riverctl map normal Super L send-layout-cmd rivertile 'main-ratio +0.05'
riverctl map normal Super+Shift H send-layout-cmd rivertile 'main-count +1'
riverctl map normal Super+Shift L send-layout-cmd rivertile 'main-count -1'

riverctl map-pointer normal Super BTN_LEFT move-view
riverctl map-pointer normal Super+Shift BTN_LEFT resize-view
riverctl map-pointer normal Super BTN_RIGHT resize-view

# Super+Alt+{H,J,K,L} to move views
#riverctl map normal Super+Alt H move left 100
#riverctl map normal Super+Alt J move down 100
#riverctl map normal Super+Alt K move up 100
#riverctl map normal Super+Alt L move right 100

# Super+Alt+Control+{H,J,K,L} to snap views to screen edges
#riverctl map normal Super+Alt+Control H snap left
#riverctl map normal Super+Alt+Control J snap down
#riverctl map normal Super+Alt+Control K snap up
#riverctl map normal Super+Alt+Control L snap right

# Super+Alt+Shift+{H,J,K,L} to resize views
#riverctl map normal Super+Alt+Shift H resize horizontal -100
#riverctl map normal Super+Alt+Shift J resize vertical 100
#riverctl map normal Super+Alt+Shift K resize vertical -100
#riverctl map normal Super+Alt+Shift L resize horizontal 100

# Super+{Up,Right,Down,Left} to change layout orientation
#riverctl map normal Super Up    send-layout-cmd rivertile "main-location top"
#riverctl map normal Super Right send-layout-cmd rivertile "main-location right"
#riverctl map normal Super Down  send-layout-cmd rivertile "main-location bottom"
#riverctl map normal Super Left  send-layout-cmd rivertile "main-location left"

### Custom bindings

riverctl map normal Super Return spawn "$TERMINAL"
riverctl map normal Super D spawn 'exec $(tofi-run)'
riverctl map normal None XF86ScreenSaver spawn 'glitchlock'
riverctl map normal Super+Shift X spawn 'glitchlock'
riverctl map normal None XF86Battery spawn 'battery'
riverctl map normal Super+Shift R spawn 'randwp'
riverctl map normal None Print spawn 'screenshot'

riverctl map normal None F7 spawn "$TERMINAL -e dmenurecord"
#riverctl map normal Super B spawn "$BROWSER"
riverctl map normal Super N spawn "$TERMINAL -e sh -c 'cd $XDG_DATA_HOME/notes; lf'"
riverctl map normal Super+Shift N spawn "$TERMINAL -e newsboat"

riverctl map -repeat normal None XF86AudioRaiseVolume spawn 'wpctl set-volume -l 1.5 @DEFAULT_AUDIO_SINK@ 2%+'
riverctl map -repeat normal Super Equal spawn 'wpctl set-volume -l 1.5 @DEFAULT_AUDIO_SINK@ 2%+'
riverctl map -repeat normal None XF86AudioLowerVolume spawn 'wpctl set-volume @DEFAULT_AUDIO_SINK@ 2%-'
riverctl map -repeat normal Super Minus spawn 'wpctl set-volume @DEFAULT_AUDIO_SINK@ 2%-'
riverctl map normal None XF86Launch1 spawn 'wpctl set-mute @DEFAULT_AUDIO_SINK@ toggle'
riverctl map normal None F6 spawn 'wpctl set-mute @DEFAULT_AUDIO_SOURCE@ toggle'

riverctl map normal Super M spawn 'music'
riverctl map normal Super+Shift M spawn 'musiccmd'
riverctl map normal None XF86AudioPrev spawn 'musiccmd prev'
riverctl map normal None XF86AudioNext spawn 'musiccmd next'
riverctl map normal None XF86AudioPlay spawn 'musiccmd cycle'
riverctl map normal None XF86AudioStop spawn 'musiccmd stop'
riverctl map normal Super+Shift Left spawn 'musiccmd prev'
riverctl map normal Super+Shift Right spawn 'musiccmd next'
riverctl map normal Super+Shift Down spawn 'musiccmd cycle'
riverctl map normal Super+Shift Up spawn 'musiccmd stop'

riverctl map normal Super S spawn 'dmenusearch web'
riverctl map normal Super A spawn 'dmenusearch aur'
riverctl map normal Super Y spawn 'dmenusearch youtube'
riverctl map normal Super W spawn 'dmenusearch man'
riverctl map normal Super E spawn 'dmenusearch emoji'

riverctl map normal Super+Shift E spawn 'shutdown-menu'
riverctl map normal Super U spawn 'dmenuhandler "$(wl-paste)"'
riverctl map normal Super+Shift U spawn 'plumber --sel'
#riverctl map-pointer normal None BTN_MIDDLE spawn 'plumber'
#riverctl map normal None button8 spawn 'plumber --sel'
#riverctl map normal None button9 close
#riverctl map normal None button10 spawn 'musiccmd'

# reload config
riverctl map normal Super Escape spawn 'kill -USR2 $(pidof waybar); makoctl reload'

# toggle bar
riverctl map normal Super+Shift B spawn 'kill -USR1 $(pidof waybar)'
# TODO: toggle padding (gaps)
#riverctl map normal Super+Shift G ...
# cycle layout (toggle floating mode)
# riverctl map normal Super+Shift Space spawn \
# 	'killall rivertile || rivertile -view-padding 0 -outer-padding 0 -main-ratio 0.55'
# TODO: toggle transparency
#riverctl map normal Control P spawn 'killall picom || picom -b'

### Start programs

spawn() {
	pidof -q "$1" || riverctl spawn "$*"
}

spawn randwp
spawn pipewire
spawn foot --server
spawn crond -f "$XDG_CONFIG_HOME/crontab" -n
spawn gammastep
spawn mako
spawn waybar
spawn rivertile -view-padding 0 -outer-padding 0 -main-ratio 0.55
spawn swayidle -w \
	timeout 300 "glitchlock" \
	timeout 600 "wlopm --off '*'" resume "wlopm --on '*'"
